[tool.poetry]
name = "ja_sentence_segmenter"
version = "0.0.2"
description = "sentence segmenter for japanese text"
authors = ["wwwcojp"]
homepage = "https://github.com/wwwcojp"
repository = "https://github.com/wwwcojp/ja_sentence_segmenter"
license = "MIT"
readme = "README.md"
packages = [
    { include = "ja_sentence_segmenter" },
]
include = [
  "ja_sentence_segmenter/py.typed"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    'Programming Language :: Python :: 3',
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: General",
]

[tool.poetry.dependencies]
python = "^3.6.2"

[tool.poetry.dev-dependencies]
bandit = "^1.7"
black = "^22.1"
dlint = "^0.12"
flake518 = "^1.2"
flake8 = "^3.9"
flake8-builtins = "^1.5"
flake8-docstrings = "^1.6"
flake8-isort = "^4.1"
isort = "^5.10"
mypy = "^0.931"
pdoc = {version = "^10.0", python = ">=3.7,<4.0"}
pip-licenses = "^3.5"
pytest = "^7.0"
pytest-cov = "^3.0"
tox = "^3.14"

[tool.black]
line-length = 160
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.coverage.run]
branch = true
omit = ["tests/*", "**/__init__.py",]

[tool.coverage.report]
skip_covered = false

[tool.flake8]
docstring-convention = "numpy"
exclude = [".git", ".tox", "dist", "docs", "*egg", "tests",".venv",]
max_complexity = 10
max_line_length = 160

[tool.isort]
line_length = 160
profile = "black"
skip = [".git", ".tox", ".venv", ".eggs", "build", "dist", "docs",]

[tool.mypy]
show_column_numbers = true
files = ["ja_sentence_segmenter/**/*.py",]

# strict option
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

# extra
warn_unreachable = true
disallow_any_unimported = true

[tool.pytest.ini_options]
testpaths = ["tests",]
python_files = ["test_*.py",]
python_classes = ["Test_",]
python_functions = ["test_*",]
addopts = "-p no:cacheprovider --cov-report xml:cov.xml --cov ja_sentence_segmenter -vv"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
